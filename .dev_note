[application]
wows_api_wrapper.py
WoWSAPIのラッパークラス
サーバーbussyとアクセスエラーは5回までリトライする
リクエスト間隔はデフォルトで0.1s
正しい情報以外はすべてNoneが返るようにしている
ship_info.py
艦艇情報を格納するクラス
インスタンス生成時にWoWSAPIのEncyclopedia-Warshipからすべての艦艇情報を取得して、
必要な情報だけを辞書型で格納する。
各メソッドは艦艇idをもとに艦名やTierなどの情報を返す

データ格納手順
IGNをfor文で回す
戦績非公開は判明した時点でcontinue
tdに表示するすべての情報を取得して一つの辞書にして、敵味方の仮リストに追加
[{"IGN": "Akane_Kotonoha", "ship_name": "shoukaku", ...}, {...}, ...]
取得してきた情報を元に表示する順番にソートしたリストを作成、仮リストは破棄
ソート基準: 艦種[空母>戦艦>巡洋>駆逐] > Tier > 国籍
           [アメリカ>日本>ソ連>ドイツ>イギリス>ポーランド>パンアジア>フランス>イタリア>イギリス連邦>パンアメリカ]]
           > 艦艇id > プレイヤーid
敵味方のリストが完成したらそれをクライアントに送るデータに格納する

テーブルに情報流すときの文字列操作
・クランは5文字(それ以上にはならないはずだけど一応)
・IGNは先頭から18文字(半角大文字A18個を基準にテーブル幅を指定してる)
・Tierは2桁(それ以上にはならないはずだけど一応)
・艦種
・艦名
・戦闘力は8桁、3桁カンマ(流石に1億超えることはないはず)
・ダメージは6桁、3桁カンマ
・K/Dは3桁+小数点以下1桁(.0も表示)
・勝率は3桁+小数点以下1桁(.0も表示)
・生存率は(100%|100%)
・撃墜2桁+少数点以下1桁
・経験値は4桁、3桁カンマ
・戦闘数は5桁、3桁カンマ
・ランクは2桁->2桁

テーブルドラッグの実装

WoWsAPIのリクエスト制限はスタンドアロンアプリで10request/s
なのでbussyをできるだけ食らわないような実装にしたい

バックグラウンドで処理しておいて、必要な情報がそろったら
WebSocket通信でjsonデータをクライアントに投げる感じで

↑の解決策
サーバーから最初に呼び出すメソッドはページを更新する必要があるかをboolで返す
####(replayフォルダの最新ファイルの名前が変わったかどうかで判定))####
最初のメソッドがTrueの時だけAPI叩くメソッドを呼び出す
APIをたたくメソッドの戻り値を必要な情報が全部入ったjsonデータにすれば少しずつ更新されることはない

切り替えにcssアニメーション使いたい
できるだけユーザーに未完成のテーブルが晒されない感じで
従来のXVMはリクエストした傍からどんどんテーブルを更新していくので、
非常に動作がもっさりしているように感じる
↑jsのonloadイベントをつかう

試合のアーカイブを残す機能を実装

tempArenaJsonでとりあえず表示の判定させるからリプレイファイルから抜き出すのはモードチェンジみたいな感じにしたほうがいいかも

ローディングは多分APIたたく処理に入る前に一度ローディングのフラグを送信してデータがそろったときにFalseにするといいかも？

起動時にアンサイクロペディアからすべての艦艇情報を取得してそれを引数にship_dictクラス(仮)を作成
ship_dictクラスは艦艇idをもとに艦名、tier、艦種などを返すメソッドを内包する

applecationフォルダはmoduleフォルダとかのほうがいいかも？
